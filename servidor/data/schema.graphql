type Cliente {
        id: ID
        nombre: String
        apellido : String
        empresa :String 
        emails : [Email]
        tipo : TipoCliente
        pedidos : [Pedido]
      }


     enum TipoCliente {
        BASICO
        PREMIUM
      }
     type Pedido {
         producto :String 
         precio : Int
     }


     type Email {
       email:String
     }

      type Query {
        getClientes(limite: Int) : [Cliente]
        getCliente(id : ID):Cliente
      }

      input pedidoInput {
        producto :String 
        precio : Int
      }

      input EmailInput {
        email: String
      }
 
      """ campos para nuevos clientes  """ 
      input clienteInput {
        id: ID
        nombre: String!
        apellido : String
        empresa :String 
        emails : [EmailInput] 
        tipo : TipoCliente!
        pedidos : [pedidoInput]
      }
      """ mutation para crear un cliente  """ 
      type Mutation {
          # datos del cliente para guardar 
          """ permite crear nuevos clientes  """ 
             crearCliente (input: clienteInput ): Cliente
             actualizarCliente (input: clienteInput ): Cliente
             eliminarCliente (id: ID! ): String
      }
      
